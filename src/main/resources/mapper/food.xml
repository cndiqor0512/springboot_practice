<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot_practice.repository.FoodRepository">
    <select id="getFoodList" resultType="com.example.springboot_practice.dto.FoodResponseDto">
        SELECT
            id,
            date,
            regdate,
            food1,
            food2,
            food3,
            food4,
            food5,
            food6
        FROM food where is_use = 1
    </select>
    <select id="getFoodData" resultType="com.example.springboot_practice.dto.FoodResponseDto">
        SELECT
            id,
            date,
            regdate,
            food1,
            food2,
            food3,
            food4,
            food5,
            food6
        FROM food where id = #{id}
    </select>
    <select id="getFoodLimit" resultType="com.example.springboot_practice.dto.FoodResponseDto">
        SELECT
            id,
            date,
            regdate,
            food1,
            food2,
            food3,
            food4,
            food5,
            food6
        FROM food where is_use = 1 order by id desc limit 5
    </select>
    <insert id ="saveFoodData" parameterType="com.example.springboot_practice.dto.FoodRequestDto">
        INSERT INTO food (food1, food2, food3, food4, food5, food6, regdate, date) VALUES (#{food1}, #{food2}, #{food3}, #{food4}, #{food5}, #{food6}, now(), #{date})
    </insert>
    <update id="updateFoodData" parameterType="com.example.springboot_practice.dto.FoodUpdateRequestDto">
        UPDATE food set food1 = #{food1}, food2 = #{food2}, food3 = #{food3}, food4 = #{food4}, food5 = #{food5}, food6 = #{food6}, date = #{date}, update_date = now() where id = #{id};
    </update>
    <delete id="deleteFoodData" parameterType="com.example.springboot_practice.dto.FoodDeleteRequestDto">
        UPDATE food set is_use = 0 where id = #{id};
    </delete>
</mapper>